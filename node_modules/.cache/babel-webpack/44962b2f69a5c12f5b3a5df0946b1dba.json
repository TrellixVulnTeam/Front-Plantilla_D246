{"ast":null,"code":"import _asyncToGenerator from \"D:/FrontAfiliados3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Validators } from '@angular/forms';\nimport { C4ConsentimientoDatosComponent } from '../components/afiliados/dialogs/c4-consentimiento-datos/c4-consentimiento-datos.component';\nimport { C7DeclaracionJuramentoComponent } from '../components/afiliados/dialogs/c7-declaracion-juramento/c7-declaracion-juramento.component';\nimport { C8AutorizacionesComponent } from '../components/afiliados/dialogs/c8-autorizaciones/c8-autorizaciones.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./afiliados-service.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"./datos-maestros.service\";\nimport * as i5 from \"./api-service.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/material/dialog\"; // import { AfiliadosService } from './afiliados.service';\n// import { ConectarApiService } from './conectar-api.service';\n// import { DatosMaestrosService } from './datos-maestros.service';\n\nexport let AfiliadosFormCompartidoService = /*#__PURE__*/(() => {\n  class AfiliadosFormCompartidoService {\n    constructor(formBuilder, service, http, datoMaestroProcesado, apiService, router, dialog) {\n      this.formBuilder = formBuilder;\n      this.service = service;\n      this.http = http;\n      this.datoMaestroProcesado = datoMaestroProcesado;\n      this.apiService = apiService;\n      this.router = router;\n      this.dialog = dialog; //Mensajes\n\n      this.mensajeErrorSoloLetras = \"Ingrese solo letras\";\n      this.mensajeErrorSoloNumeros = \"Ingrese solo números\";\n      this.mensajeErrorNumeroCelular = \"Ingrese solo números, un total de 10 digitos iniciando por 3\";\n      this.mensajeErrorCorreoUnal = \"Debe ingresar un correo @unal.edu.co\";\n      this.mensajeErrorCorreo = \"Debe ingresar un correo valido\";\n      this.mensajeErorLimiteBeneficiarios = \"Se ha alcanzado el límite de beneficiarios\";\n      this.mensajeErrorRequired = \"Este campo es obligatorio\"; //Valores 'quemados'\n      // private letrasVias = ['A', 'B', 'C', 'D', 'E', 'F'];\n      // private listaNacionalidades = ['nac 1', 'nac2']\n      //Validadores\n\n      this.validatorSoloLetras = Validators.pattern('^[a-zA-Z \\u00f1\\u00d1]*$');\n      this.validatorSoloNumeros = Validators.pattern('^[0-9]*$');\n      this.validatorLetrasNumeros = Validators.pattern('^[a-zA-Z0-9 \\u00f1\\u00d1]{1,100}$');\n      this.validatorNumeroCelular = Validators.pattern('^[3][0-9]{9}');\n      this.validatorCorreoUnal = Validators.pattern('^[a-zA-Z0-9._-]+@(u|U)(n|N)(a|A)(l|L)[.](e|E)(d|D)(u|U)[.](c|C)(o|O)+$');\n      this.validatorCorreoNormal = Validators.pattern('^[a-zA-Z0-9._-]+@[a-zA-Z0-9.]+[.]+[a-zA-Z]{2,5}$'); //0 = crear nuevo, 1 editar, 2 ver, 3 generar\n\n      this.modoFormulario = 0;\n      this.consentimientoDatos = false;\n      this.declaracionJuramento = false;\n      this.autorizaciones = false; // this.formularioAfiliados =  this.generarFormulario();\n\n      this.generarFormulario();\n      this.apiService.getDatosMaestros().subscribe(data => {\n        let datosMaestros = data;\n        console.log('datosMaestros');\n        console.log(datosMaestros);\n        this.datoMaestroProcesado.procesarDatos(datosMaestros);\n      }); //console.log(this.formularioAfiliados.value)\n    } //Genero form inicial\n\n\n    generarFormulario() {\n      var _a, _b; //this.formularioAfiliados\n\n\n      this.formularioAfiliados = this.formBuilder.group({\n        NU_IDAFILIADO_AFIL: [null],\n        NU_IDCOTIZANTE_AFIL: [null],\n        NU_TIPOSOLICITUD_AFIL: [null],\n        NU_IDDEPENDENCIA_DM: [null],\n        NU_TIPOAFILIADO_AFIL: [null],\n        NU_TELEFONO_AFIL: [null],\n        NU_EXTENSION_AFIL: [null],\n        NU_CELULAR_AFIL: [null, [this.validatorNumeroCelular]],\n        NU_CELULARDOS_AFIL: [null, [this.validatorNumeroCelular]],\n        NU_TELEMERGEN_AFIL: [null],\n        NU_CELUEMERGEN_AFIL: [null, [this.validatorNumeroCelular]],\n        NU_DEPAREMERGEN_AFIL: [null],\n        NU_CIUDADEMERGEN_AFIL: [null],\n        NU_ZONAEMERGEN_AFIL: [null],\n        NU_LOCALIEMERGEN_AFIL: [null],\n        NU_BARRIOEMERGEN_AFIL: [null],\n        NU_ESTRATEMERGEN_AFIL: [null],\n        NU_DOCUMEMERGEN_AFIL: [null],\n        NU_DECLARASALUD_AFIL: [null],\n        NU_PROVISIONAL_AFIL: [null],\n        NU_IBC_AFIL: [null],\n        NU_BENEFICIARIOUN_AFIL: [null],\n        NU_BENEFIUNIFIC_AFIL: [null],\n        NU_BENEFIUPC_AFIL: [null],\n        NU_BENEFIDENPENDI_AFIL: [null],\n        NU_BENEFIEXCLU_AFIL: [null],\n        NU_BENEFIHIJO_AFIL: [null],\n        NU_BENEFIMATRI_AFIL: [null],\n        NU_ESTADO_AFIL: [null],\n        TX_FORMASOLICITUD_AFIL: [null],\n        TX_EMPLEADOR_AFIL: [null],\n        TX_SEDEUNAL_DM: [null],\n        TX_ORIENTACIONAFIL_AFIL: [null],\n        TX_NOMIDENTI_AFIL: [null],\n        TX_PRIMAPELLI_AFIL: [null, [this.validatorSoloLetras]],\n        TX_SEGAPELLI_AFIL: [null],\n        TX_PRIMNOMBRE_AFIL: [null],\n        TX_SEGNOMBRE_AFIL: [null],\n        TX_IDENTIFICACION_AFIL: [null],\n        TX_DIRECCION_AFIL: [null],\n        TX_COMPLDIRE_AFIL: [null],\n        TX_VEREDA_AFIL: [null],\n        TX_CORREOUNAL_AFIL: [null, [this.validatorCorreoUnal]],\n        TX_CORREOALTER_AFIL: [null, [this.validatorCorreoNormal]],\n        TX_NOMBREEMERGENCIA_AFIL: [null],\n        TX_DIREMERGEN_AFIL: [null],\n        TX_COMPLDIREMERGEN_AFIL: [null],\n        TX_VEREDAEMERGEN_AFIL: [null],\n        TX_ACTIVIECONOMICA_AFIL: [null],\n        TX_CARGOACTUAL_AFIL: [null],\n        TX_DEDICACION_AFIL: [null],\n        TX_PASS_AFIL: [null],\n        TX_OBSERVACIONESVALIDAR_AFIL: [null],\n        TX_OBSERVACIONESACEPTAR_AFIL: [null],\n        TX_OBSERVACIONESRECHAZAR_AFIL: [null],\n        TX_OBSERVACIONESAPROBAR_AFIL: [null],\n        TX_MOTIVORECHAZO_AFIL: [null],\n        FE_FECHAEXPEDICION_AFIL: [null],\n        FE_FECHAVENCIMIENTO_AFIL: [null],\n        FE_FECHANACIMIENTO_AFIL: [null],\n        FE_FECHACREACION_AFIL: [null],\n        FE_FECHASOLICITUD_AFIL: [null],\n        FE_FECHAINICIOSER_AFIL: [null],\n        NU_IDTIPOIDEN_TIPOIDEN: [null],\n        NU_IDGENERO_GENEROS: [null],\n        NU_IDNACIONALI_NACIONALI: [null],\n        NU_IDGRUPOET_GRUPOET: [null],\n        NU_IDGRUPOPOBLA_GRUPOPOBL: [null],\n        NU_IDESTACIV_ESTADOCIV: [null],\n        NU_IDTIPOSANGRE_TIPOSANGRE: [null],\n        NU_IDRH_RHS: [null],\n        NU_IDEPS_EPSS: [null],\n        NU_IDREGIMEN_REGIMEN: [null],\n        NU_IDESCOLARI_ESCOLARIDAD: [null],\n        NU_IDOCUPACION_OCUPACION: [null],\n        NU_IDDEPENDENC_DEPENDENC: [null],\n        NU_IDFONDPENSI_FONPENSI: [null],\n        NU_IDTIPODISCAPA_DISCA: [null],\n        NU_IDDEPARTAMENTO_DEPAR: [null],\n        NU_CIUDAD_CIUDAD: [null],\n        NU_IDZONA_ZONA: [null],\n        NU_IDLOCALIDAD_LOCALIDAD: [null],\n        NU_IDBARRIO_BARRIO: [null],\n        NU_IDESTRATO: [null],\n        NU_IDPARENTESCO_PARENTESCO: [null],\n        NU_IDEMPLEADOR_EMPLEADOR: [null],\n        NU_IDRELACIONBENE_RELACION: [null],\n        TX_NITEMP_AFIL: [null],\n        TX_NOMRAZSOCEMP_AFIL: [null],\n        DeclaratoriasPorAfiliados: [null],\n        archivos: [],\n        // 'NU_IDAFILIADO_AFIL': 1,\n        //     'TX_IDENTIFICACION_AFIL': 2,\n        //     'DeclaratoriasPorAfiliados': [],\n        //     archivos: [],\n        TX_NOMCONEAPB_AFIL: [null],\n        TX_ADMINEAPB_AFIL: [null],\n        NU_PENSIONADO_AFIL: [null],\n        TMP_DISCAPACIDADES: [null],\n        Beneficiarios: this.formBuilder.array([])\n      }); // testvalues\n\n      (_a = this.formularioAfiliados.get('NU_IDAFILIADO_AFIL')) === null || _a === void 0 ? void 0 : _a.setValue(0); // this.formularioAfiliados.get('TX_IDENTIFICACION_AFIL')?.setValue(2);\n      // this.formularioAfiliados.get('DeclaratoriasPorAfiliados')?.setValue([\n      //   {NU_IDDECAFIL_DECLAFIL: 2, NU_RESPUESTAPREGUNTA: 'hola'},\n      //   {NU_IDDECAFIL_DECLAFIL: 3, NU_RESPUESTAPREGUNTA: 'pregunta 2'}\n      // ]);\n\n      (_b = this.formularioAfiliados.get('archivos')) === null || _b === void 0 ? void 0 : _b.setValue([]);\n      this.formularioAfiliados.controls['TX_NOMCONEAPB_AFIL'].disable();\n      this.formularioAfiliados.controls['TX_ADMINEAPB_AFIL'].disable();\n      this.formularioAfiliados.controls['NU_IDTIPODISCAPA_DISCA'].disable();\n      this.formularioAfiliados.controls['TMP_DISCAPACIDADES'].disable();\n      this.formularioAfiliados.controls['NU_IDDEPENDENC_DEPENDENC'].disable();\n      this.formularioAfiliados.controls['NU_CIUDAD_CIUDAD'].disable();\n      this.formularioAfiliados.controls['NU_IDZONA_ZONA'].disable();\n      this.formularioAfiliados.controls['TX_VEREDA_AFIL'].disable();\n      this.formularioAfiliados.controls['TX_COMPLDIRE_AFIL'].disable(); // this.formularioAfiliados.controls['TX_DIRECCION_AFIL'].disable();\n\n      this.formularioAfiliados.controls['NU_IDLOCALIDAD_LOCALIDAD'].disable();\n      this.formularioAfiliados.controls['NU_IDBARRIO_BARRIO'].disable();\n      this.formularioAfiliados.controls['NU_IDESTRATO'].disable();\n      this.formularioAfiliados.controls['NU_CIUDADEMERGEN_AFIL'].disable();\n      this.formularioAfiliados.controls['NU_ZONAEMERGEN_AFIL'].disable();\n      this.formularioAfiliados.controls['TX_VEREDAEMERGEN_AFIL'].disable();\n      this.formularioAfiliados.controls['TX_COMPLDIREMERGEN_AFIL'].disable(); // this.formularioAfiliados.controls['TX_DIREMERGEN_AFIL'].disable();\n\n      this.formularioAfiliados.controls['NU_LOCALIEMERGEN_AFIL'].disable();\n      this.formularioAfiliados.controls['NU_BARRIOEMERGEN_AFIL'].disable();\n      this.formularioAfiliados.controls['NU_ESTRATEMERGEN_AFIL'].disable(); //newForm.controls['archivos'].disable();\n      //return newForm;\n    }\n    /**\r\n     * Envio el modo de solicitud\r\n     * @description 0 = crear, 1 = editar, 2 = ver, 3 = permite generar\r\n     * @param  {number} modo\r\n     */\n\n\n    crearSolicitud(modo, afiliado) {\n      this.modoSolicitud = modo;\n      let newDialog = this.dialog.open(C4ConsentimientoDatosComponent);\n      newDialog.afterClosed().subscribe(resultConsentimiento => {\n        if (resultConsentimiento == true) {\n          newDialog = this.dialog.open(C7DeclaracionJuramentoComponent, {\n            width: '70%'\n          });\n          newDialog.afterClosed().subscribe(resultDeclaracion => {\n            if (resultDeclaracion == true) {\n              console.log('pasa resultDeclaracion');\n              newDialog = this.dialog.open(C8AutorizacionesComponent, {\n                width: '70%'\n              });\n              newDialog.afterClosed().subscribe(result => {\n                if (result == true) {\n                  this.formularioAfiliados.reset();\n                  this.router.navigate(['/SolicitarAfiliacion']);\n                  console.log('creando solicitud');\n                  console.log(this.modoSolicitud);\n                }\n\n                if (result == false) console.log('no pasa juramento');\n              });\n            }\n\n            if (resultDeclaracion == false) console.log('no pasa juramento');\n          });\n        }\n\n        if (resultConsentimiento == false) console.log('no pasa');\n      });\n    }\n\n    enviarForm() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        console.log(\"Enviando\");\n        console.log(\"Values:\"); //c4 tratamiento\n        //console.log(this.listaBeneficiarios.value);\n        //TMP_DIRECCION_COMPUESTA\n        //const tempBeneficiarios = this.listaBeneficiarios as FormArray;\n        //console.log(tmpBene.value);\n        //console.log(tmpBene.length)\n        //const arr: FormArray = this.GSTNForm.get('gstandbankDetails') as FormArray;\n        //const grp: FormGroup = tmpBene.get('0') as FormGroup;\n        //console.log(grp);\n        //grp.removeControl('TMP_DIRECCION_COMPUESTA');\n        // let nuevaListaBeneficiarios = this.formBuilder.array([]);\n        // if(tempBeneficiarios){\n        //   for (let index = 0; index < tempBeneficiarios.length; index++) {\n        //     const _beneficiario: FormGroup = tempBeneficiarios.get(index.toString()) as FormGroup;\n        //     _beneficiario.removeControl('TMP_DIRECCION_COMPUESTA');\n        //     _beneficiario.removeControl('tmpOtraDireccion');\n        //     nuevaListaBeneficiarios.push(_beneficiario);\n        //   }\n        //   console.log(\"NUEVA LISTA\");\n        // }\n        // console.log(nuevaListaBeneficiarios.value);\n\n        setTimeout(() => {\n          _this.formularioAfiliados.removeControl('Beneficiarios');\n\n          _this.formularioAfiliados.removeControl('TMP_DIRECCION_COMPUESTA');\n\n          let newForm = _this.formBuilder.group({\n            cotizante: _this.formularioAfiliados.value,\n            //beneficiario: this.formBuilder.array(nuevaListaBeneficiarios.value),\n            // archivo: this.formularioAfiliados.get('archivoTest')?.value,\n            archivo: [[]],\n            beneficiario: [[]]\n          }); //newForm.get('cotizante').addControl('DeclaratoriasPorAfiliados', new FormControl([]))\n          // newForm.patchValue({\n          //   cotizante: ({\n          //     'NU_IDAFILIADO_AFIL': 1,\n          //     'TX_IDENTIFICACION_AFIL': 2,\n          //     'DeclaratoriasPorAfiliados': [],\n          //     archivos: [],\n          //   })\n          // })\n\n\n          console.log(newForm.value); //console.log(newForm.value);\n\n          _this.service.prueba(newForm.value);\n        }, 200);\n        console.log(\"done\");\n      })();\n    }\n\n    getAfiliadosForm() {\n      return this.formularioAfiliados;\n    }\n\n    get modoSolicitud() {\n      return this.modoFormulario;\n    }\n\n    set modoSolicitud(nuevoModo) {\n      this.modoFormulario = nuevoModo;\n    } //#region MENSAJES DE ERROR\n\n\n    get errorSoloLetras() {\n      return this.mensajeErrorSoloLetras;\n    }\n\n    get errorSoloNumeros() {\n      return this.mensajeErrorSoloNumeros;\n    }\n\n    get errorNumeroCelular() {\n      return this.mensajeErrorNumeroCelular;\n    }\n\n    get errorCorreoUnal() {\n      return this.mensajeErrorCorreoUnal;\n    }\n\n    get errorEmailNormal() {\n      return this.mensajeErrorCorreo;\n    }\n\n    get erorLimiteBeneficiarios() {\n      return this.mensajeErorLimiteBeneficiarios;\n    }\n\n    get errorRequired() {\n      return this.mensajeErrorRequired;\n    }\n\n  }\n\n  AfiliadosFormCompartidoService.ɵfac = function AfiliadosFormCompartidoService_Factory(t) {\n    return new (t || AfiliadosFormCompartidoService)(i0.ɵɵinject(i1.FormBuilder), i0.ɵɵinject(i2.AfiliadosService), i0.ɵɵinject(i3.HttpClient), i0.ɵɵinject(i4.DatosMaestrosService), i0.ɵɵinject(i5.WebApiService), i0.ɵɵinject(i6.Router), i0.ɵɵinject(i7.MatDialog));\n  };\n\n  AfiliadosFormCompartidoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AfiliadosFormCompartidoService,\n    factory: AfiliadosFormCompartidoService.ɵfac,\n    providedIn: 'root'\n  });\n  return AfiliadosFormCompartidoService;\n})();","map":null,"metadata":{},"sourceType":"module"}