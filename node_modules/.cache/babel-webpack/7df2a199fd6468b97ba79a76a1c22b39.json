{"ast":null,"code":"import { Validators, FormControl } from '@angular/forms';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/api-service.service\";\nimport * as i3 from \"src/app/services/afiliados-form-compartido.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/radio\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/chips\";\nimport * as i11 from \"@angular/material/autocomplete\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/input\";\nimport * as i14 from \"@matheo/datepicker\";\nimport * as i15 from \"@angular/material/checkbox\";\nconst _c0 = [\"fruitInput\"];\nconst _c1 = [\"auto\"];\n\nfunction C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"div\", 19);\n    i0.ɵɵelementStart(3, \"mat-radio-group\", 20);\n    i0.ɵɵlistener(\"change\", function C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_template_3_Template_mat_radio_group_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const i_r2 = i0.ɵɵnextContext(2).index;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.radioTest($event, i_r2);\n    });\n    i0.ɵɵelementStart(4, \"mat-radio-button\", 21);\n    i0.ɵɵtext(5, \"S\\u00ED\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-radio-button\", 22);\n    i0.ɵɵtext(7, \"No\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-radio-button\", 23);\n    i0.ɵɵtext(9, \"N/A\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const pregunta_r1 = i0.ɵɵnextContext(2).$implicit;\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (tmp_0_0 = pregunta_r1.get(\"tx_pregunta\")) == null ? null : tmp_0_0.value, \" \");\n  }\n}\n\nfunction C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_template_5_ng_container_12_mat_chip_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-chip\", 34);\n    i0.ɵɵlistener(\"removed\", function C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_template_5_ng_container_12_mat_chip_8_Template_mat_chip_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const datoActual_r23 = restoredCtx.$implicit;\n      const ctx_r24 = i0.ɵɵnextContext(5);\n      return ctx_r24.remove(datoActual_r23);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 35);\n    i0.ɵɵelementStart(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const datoActual_r23 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", datoActual_r23.nombreMedicamento, \" \");\n  }\n}\n\nfunction C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_template_5_ng_container_12_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const datoActual_r26 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", datoActual_r26);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", datoActual_r26.nombreMedicamento, \" \");\n  }\n}\n\nfunction C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_template_5_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 24);\n    i0.ɵɵelementStart(2, \"div\", 26);\n    i0.ɵɵelementStart(3, \"mat-form-field\", 13);\n    i0.ɵɵelementStart(4, \"mat-label\");\n    i0.ɵɵtext(5, \"Medicamentos...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-chip-list\", null, 27);\n    i0.ɵɵtemplate(8, C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_template_5_ng_container_12_mat_chip_8_Template, 5, 1, \"mat-chip\", 28);\n    i0.ɵɵelementStart(9, \"input\", 29, 30);\n    i0.ɵɵlistener(\"matChipInputTokenEnd\", function C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_template_5_ng_container_12_Template_input_matChipInputTokenEnd_9_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext(4);\n      return ctx_r27.add($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-autocomplete\", 31, 32);\n    i0.ɵɵlistener(\"optionSelected\", function C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_template_5_ng_container_12_Template_mat_autocomplete_optionSelected_11_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n\n      const _r20 = i0.ɵɵreference(10);\n\n      const ctx_r29 = i0.ɵɵnextContext(4);\n      ctx_r29.selected($event);\n      return _r20.value = \"\";\n    });\n    i0.ɵɵtemplate(13, C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_template_5_ng_container_12_mat_option_13_Template, 2, 2, \"mat-option\", 33);\n    i0.ɵɵpipe(14, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r18 = i0.ɵɵreference(7);\n\n    const _r21 = i0.ɵɵreference(12);\n\n    const ctx_r17 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r17.medicamentosSeleccionados);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r17.fruitCtrl)(\"matAutocomplete\", _r21)(\"matChipInputFor\", _r18);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(14, 5, ctx_r17.filteredDiscapacidades));\n  }\n}\n\nfunction C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵelementStart(1, \"div\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 19);\n    i0.ɵɵelementContainerStart(4, 25);\n    i0.ɵɵelementStart(5, \"mat-radio-group\", 20);\n    i0.ɵɵlistener(\"change\", function C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_template_5_Template_mat_radio_group_change_5_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const i_r2 = i0.ɵɵnextContext(2).index;\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.muestraMedicamentos($event, i_r2);\n    });\n    i0.ɵɵelementStart(6, \"mat-radio-button\", 21);\n    i0.ɵɵtext(7, \"S\\u00ED\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-radio-button\", 22);\n    i0.ɵɵtext(9, \"No\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-radio-button\", 23);\n    i0.ɵɵtext(11, \"N/A\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_template_5_ng_container_12_Template, 15, 7, \"ng-container\", 14);\n  }\n\n  if (rf & 2) {\n    const pregunta_r1 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r12 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", (tmp_0_0 = pregunta_r1.get(\"tx_pregunta\")) == null ? null : tmp_0_0.value, \" \");\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.mostrarMedicamentos);\n  }\n}\n\nfunction C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 13);\n    i0.ɵɵtemplate(1, C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 14);\n    i0.ɵɵtemplate(2, C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_div_2_Template, 1, 0, \"div\", 15);\n    i0.ɵɵtemplate(3, C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_template_3_Template, 10, 1, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(5, C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_ng_template_5_Template, 13, 2, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r9 = i0.ɵɵreference(4);\n\n    const _r11 = i0.ɵɵreference(6);\n\n    const pregunta_r1 = i0.ɵɵnextContext().$implicit;\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = pregunta_r1.get(\"tx_pregunta\")) == null ? null : tmp_0_0.value.includes(\"medicamento\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = pregunta_r1.get(\"tx_pregunta\")) == null ? null : tmp_1_0.value.includes(\"medicamento\"))(\"ngIfThen\", _r11)(\"ngIfElse\", _r9);\n  }\n}\n\nfunction C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 37);\n    i0.ɵɵelementStart(2, \"div\", 38);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 39);\n    i0.ɵɵelementContainerStart(5);\n    i0.ɵɵelementStart(6, \"mat-form-field\", 13);\n    i0.ɵɵelement(7, \"input\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const pregunta_r1 = i0.ɵɵnextContext().$implicit;\n    let tmp_0_0;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", (tmp_0_0 = pregunta_r1.get(\"tx_pregunta\")) == null ? null : tmp_0_0.value, \" \");\n  }\n}\n\nfunction C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 13);\n    i0.ɵɵelementStart(1, \"div\", 37);\n    i0.ɵɵelementStart(2, \"div\", 38);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 39);\n    i0.ɵɵelementContainerStart(5);\n    i0.ɵɵelementStart(6, \"mat-form-field\", 13);\n    i0.ɵɵelementStart(7, \"mat-label\");\n    i0.ɵɵtext(8, \"Seleccione una fecha\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 41);\n    i0.ɵɵelement(10, \"mat-datepicker-toggle\", 42);\n    i0.ɵɵelement(11, \"mat-datepicker\", null, 43);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r36 = i0.ɵɵreference(12);\n\n    const pregunta_r1 = i0.ɵɵnextContext().$implicit;\n    let tmp_0_0;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", (tmp_0_0 = pregunta_r1.get(\"tx_pregunta\")) == null ? null : tmp_0_0.value, \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"matDatepicker\", _r36);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r36);\n  }\n}\n\nfunction C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainerStart(1);\n    i0.ɵɵelementStart(2, \"mat-checkbox\", 44);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const pregunta_r1 = i0.ɵɵnextContext().$implicit;\n    let tmp_0_0;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", (tmp_0_0 = pregunta_r1.get(\"tx_pregunta\")) == null ? null : tmp_0_0.value, \" \");\n  }\n}\n\nfunction C6DeclaratoriaSaludQuemadoComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵtemplate(2, C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_2_Template, 7, 4, \"ng-container\", 11);\n    i0.ɵɵtemplate(3, C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_3_Template, 8, 1, \"ng-container\", 12);\n    i0.ɵɵtemplate(4, C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_4_Template, 13, 3, \"ng-container\", 11);\n    i0.ɵɵtemplate(5, C6DeclaratoriaSaludQuemadoComponent_div_10_ng_container_5_Template, 4, 1, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const pregunta_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵproperty(\"ngSwitch\", (tmp_0_0 = pregunta_r1.get(\"tx_tipocampo\")) == null ? null : tmp_0_0.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.getFormGroup(pregunta_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"radiobutton\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"input.number\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"input.date\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n  }\n}\n\nexport let C6DeclaratoriaSaludQuemadoComponent = /*#__PURE__*/(() => {\n  class C6DeclaratoriaSaludQuemadoComponent {\n    constructor(formBuilder, servicioApi, sharedFb, dialogRef) {\n      this.formBuilder = formBuilder;\n      this.servicioApi = servicioApi;\n      this.sharedFb = sharedFb;\n      this.dialogRef = dialogRef; // formDeclas: FormArray;\n\n      this.preguntas = [];\n      this.medicamentos = [];\n      this.listaMedicamentosProcesada = []; // formTest: FormGroup;\n\n      this.test = true;\n      this.items = ['hola', 'mundo', 'test'];\n      this.mostrarMedicamentos = false;\n      this.limiteMedicamentos = 3;\n      this.medicamentosSeleccionados = [];\n      this.medicamentoFiltrado = [];\n      this.fruitCtrl = new FormControl();\n      this.medicamentosLista = [];\n      this.formularioAfiliados = this.sharedFb.getAfiliadosForm();\n      this.formDeclaratoria = this.formBuilder.group({\n        preguntasDeclaratorias: this.formBuilder.array([])\n      });\n      this.servicioApi.getPreguntasDeclaratorias().subscribe(data => {\n        this.preguntas = data;\n        console.log('data preguntas');\n        console.log(data);\n        console.log(this.preguntas.length);\n        this.crearControles();\n      });\n      this.cargarMedicamentos();\n    }\n\n    remove(medicamento) {\n      this.medicamentosSeleccionados = this.medicamentosSeleccionados.filter(current => {\n        return current.codigo != medicamento.codigo; // return current.idPosition != discapacidad.idPosition\n      });\n      this.restaurarDiscapacidades();\n      this.autocomplete.closePanel();\n    }\n\n    add(event) {\n      this.autocomplete.closePanel();\n      this.restaurarDiscapacidades();\n      this.filteredDiscapacidades.pipe(map(value => this.getLista()));\n    }\n\n    selected(event) {\n      console.log('selected');\n      this.medicamentosSeleccionados.push(event.option.value);\n      this.restaurarDiscapacidades();\n      this.removerMedicamento(event.option.value.idPosition);\n      this.autocomplete.closePanel();\n      this.filteredDiscapacidades.pipe(map(value => this.getLista())); // this.setDiscapacidades();\n    }\n\n    restaurarDiscapacidades() {\n      let arr = [];\n      this.medicamentosSeleccionados.forEach(element => {\n        //arr.push(element.idPosition)\n        arr.push(element.codigo);\n      }); //this.medicamentoFiltrado = Object.assign({},this.medicamentos)\n\n      this.medicamentosLista = Object.assign({}, this.medicamentos);\n      Object.values(this.medicamentosLista).filter(data => !arr.includes(data.codigo)); // this.medicamentoFiltrado = this.medicamentosLista.filter(\n      //   data => !arr.includes(data.codigo)\n      //   );\n    }\n\n    getLista() {\n      return this.medicamentoFiltrado;\n    }\n\n    removerMedicamento(position) {\n      for (let index = 0; index < this.medicamentoFiltrado.length; index++) {\n        if (this.medicamentoFiltrado[index].codigo == position) {\n          this.medicamentoFiltrado.splice(index, 1);\n        }\n      }\n    }\n\n    get getPreguntas() {\n      return this.formDeclaratoria.get('preguntasDeclaratorias'); // if(this.formDeclaratoria.controls['preguntasDeclaratorias'] as FormArray){\n      // }\n      // return this.formBuilder.array([])\n    }\n\n    getFormGroup(contrl) {\n      // console.log(contrl)\n      return contrl;\n    } // get respuestas(){\n    //   return this.formTest.controls['respuestas'] as FormArray\n    // }\n\n\n    test2() {\n      var _a, _b, _c, _d;\n\n      let tmpForm = this.formBuilder.group({\n        arrayForm: this.formBuilder.array([])\n      });\n\n      for (let index = 0; index < this.getPreguntas.controls.length; index++) {\n        let oneForm = this.getPreguntas.controls[index];\n\n        if (((_a = oneForm.get('tx_pregunta')) === null || _a === void 0 ? void 0 : _a.value.includes('medicamento')) && ((_b = oneForm.get('NU_RESPUESTAPREGUNTA')) === null || _b === void 0 ? void 0 : _b.value) == 0) {\n          let tempArray = [];\n          this.medicamentosSeleccionados.forEach(element => {\n            tempArray.push(element.codigo);\n          });\n          console.log(`[${tempArray.toString()}]`);\n          (_c = oneForm.get('NU_RESPUESTAPREGUNTA')) === null || _c === void 0 ? void 0 : _c.setValue(`[${tempArray.toString()}]`);\n        }\n\n        tmpForm.get('arrayForm').push(oneForm);\n      }\n\n      console.log(tmpForm.get('arrayForm').value);\n      (_d = this.formularioAfiliados.get('DeclaratoriasPorAfiliados')) === null || _d === void 0 ? void 0 : _d.setValue(tmpForm.get('arrayForm').value);\n      this.dialogRef.close();\n    }\n\n    cargarMedicamentos() {\n      this.servicioApi.getMedicamentos().subscribe(data => {\n        console.log(data);\n        this.medicamentos = data;\n        this.medicamentoFiltrado = data;\n        this.listaMedicamentosProcesada = [];\n\n        for (let index = 0; index < this.medicamentos.length; index++) {\n          console.log(this.medicamentos[index].codigo);\n          this.listaMedicamentosProcesada.push({\n            display: this.medicamentos[index].nombreMedicamento,\n            value: this.medicamentos[index].codigo\n          });\n        }\n\n        console.log(this.listaMedicamentosProcesada);\n        console.log(this.medicamentos);\n      });\n    }\n\n    radioTest(event, index) {\n      console.log('Pregunta: ' + index + ' valor: ' + event.value);\n      console.log(this.getPreguntas.valid);\n      console.log(this.getPreguntas.value);\n    }\n\n    muestraMedicamentos(event, index) {\n      console.log('Pregunta: ' + index + ' valor: ' + event.value);\n\n      if (event.value == 0) {\n        return this.mostrarMedicamentos = true;\n      }\n\n      return this.mostrarMedicamentos = false;\n    }\n\n    crearControles() {\n      var test = this.preguntas;\n      console.log('preguntas');\n      console.log(test);\n\n      for (let index = 0; index < this.preguntas.length; index++) {\n        var nombre = test[index].nU_IDPREGDECLA_DECLAFIL;\n        var _idPregunta = test[index].nU_IDPREGDECLA_DECLAFIL;\n        this.getPreguntas.push(this.formBuilder.group({\n          NU_IDDECAFIL_DECLAFIL: [nombre],\n          NU_RESPUESTAPREGUNTA: [null, [Validators.required]],\n          tx_pregunta: test[index].tX_PREGUNTA_PREGDECL,\n          tx_tipocampo: test[index].tX_TIPOCAMPO_PREGDECL\n        })); // this.formDeclaratoria.addControl(nombre.toString(),\n        //   this.formBuilder.group({\n        //     idPregunta : [_idPregunta, Validators.required],\n        //     respuesta : [null, Validators.required]\n        //   })\n        // );\n      }\n\n      console.log(this.getPreguntas.value); // console.log(this.getPreguntas.valid)\n    } // getFb(nm: number): FormGroup{\n    //   // return nm.toString();\n    //   // return this.formDeclaratoria.get(''+nm) as FormGroup\n    // }\n    //#region medicamentos\n    // @ViewChild(SelectAutocompleteComponent) multiSelect!: SelectAutocompleteComponent;\n    // selected = [''];\n    // showError = false;\n    // errorMessage = '';\n    // getSelectedOptions(selected: string[]) {\n    //   if(this.selected.length > this.limiteMedicamentos) return;\n    //   else{\n    //     console.log(this.selected.length)\n    //   this.selected = selected;\n    //   }\n    // }\n    // onResetSelection() {\n    //   this.selected = [];\n    // }\n    // onToggleDropdown() {\n    //   this.multiSelect.toggleDropdown();\n    // }\n    //#endregion\n\n\n    imprimir() {\n      var _a, _b, _c;\n\n      let tmpForm = this.formBuilder.group({\n        arrayForm: this.formBuilder.array([])\n      });\n\n      for (let index = 0; index < this.getPreguntas.controls.length; index++) {\n        let oneForm = this.getPreguntas.controls[index];\n\n        if (((_a = oneForm.get('tx_pregunta')) === null || _a === void 0 ? void 0 : _a.value.includes('medicamento')) && ((_b = oneForm.get('NU_RESPUESTAPREGUNTA')) === null || _b === void 0 ? void 0 : _b.value) == 0) {\n          let tempArray = [];\n          this.medicamentosSeleccionados.forEach(element => {\n            tempArray.push(element.codigo);\n          });\n          console.log(`[${tempArray.toString()}]`);\n          (_c = oneForm.get('NU_RESPUESTAPREGUNTA')) === null || _c === void 0 ? void 0 : _c.setValue(`[${tempArray.toString()}]`);\n        }\n\n        tmpForm.get('arrayForm').push(oneForm);\n      }\n\n      console.log(tmpForm.get('arrayForm').value);\n    }\n\n    ngOnInit() {\n      this.filteredDiscapacidades = this.fruitCtrl.valueChanges.pipe(startWith(null), // map((fruit: string | null) =>\n      //   fruit ? this._filter(fruit) : this.allFruits.slice()\n      // )\n      map(value => this._filter(value)));\n    }\n\n    _filter(value) {\n      console.log(value);\n      console.log(this.medicamentoFiltrado);\n      if (!value) return this.medicamentoFiltrado;\n\n      if (value && typeof value == 'string') {\n        console.log('string');\n        let tempLista = Object.assign({}, this.medicamentoFiltrado);\n        tempLista = this.medicamentoFiltrado.filter(opcion => // opcion.nombreMedicamento == value\n        opcion.nombreMedicamento.toString().toLowerCase().includes(value.toLowerCase()));\n        return tempLista;\n      } else {\n        console.log('obj');\n        let tempLista = Object.assign({}, this.medicamentoFiltrado);\n        tempLista = this.medicamentoFiltrado.filter(opcion => opcion.nombreMedicamento == value.nombreMedicamento //opcion.name.toString().toLowerCase().includes(value.toLowerCase())\n        );\n        return tempLista;\n      } //return this.discapacidadLstFiltrado.data\n\n    }\n\n  }\n\n  C6DeclaratoriaSaludQuemadoComponent.ɵfac = function C6DeclaratoriaSaludQuemadoComponent_Factory(t) {\n    return new (t || C6DeclaratoriaSaludQuemadoComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.WebApiService), i0.ɵɵdirectiveInject(i3.AfiliadosFormCompartidoService), i0.ɵɵdirectiveInject(i4.MatDialogRef));\n  };\n\n  C6DeclaratoriaSaludQuemadoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: C6DeclaratoriaSaludQuemadoComponent,\n    selectors: [[\"app-c6-declaratoria-salud-quemado\"]],\n    viewQuery: function C6DeclaratoriaSaludQuemadoComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(MatAutocompleteTrigger, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fruitInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matAutocomplete = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.autocomplete = _t.first);\n      }\n    },\n    decls: 14,\n    vars: 3,\n    consts: [[\"mat-mini-fab\", \"\", \"aria-label\", \"close dialog\", 1, \"close-button\", 3, \"mat-dialog-close\"], [1, \"close-icon\"], [\"mat-dialog-title\", \"\", 1, \"dialog-title\"], [3, \"formGroup\"], [1, \"container\"], [\"formArrayName\", \"preguntasDeclaratorias\"], [3, \"ngSwitch\", 4, \"ngFor\", \"ngForOf\"], [\"align\", \"end\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [3, \"ngSwitch\"], [1, \"row\", \"justify-content-between\", \"mb-2\", 3, \"formGroup\"], [\"class\", \"w-100\", 4, \"ngSwitchCase\"], [4, \"ngSwitchCase\"], [1, \"w-100\"], [4, \"ngIf\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"normal\", \"\"], [\"medicamentos\", \"\"], [1, \"col-sm-8\", \"col-lg-9\", \"col-xl-9\"], [1, \"col-sm-4\", \"col-lg-3\", \"col-xl-3\"], [\"color\", \"primary\", \"formControlName\", \"NU_RESPUESTAPREGUNTA\", 1, \"radioGroup\", 3, \"change\"], [\"value\", \"0\"], [\"value\", \"1\"], [\"value\", \"2\"], [1, \"row\", \"medicamentos\"], [1, \"row\", \"justify-content-between\", \"radioGroup\"], [1, \"col-12\"], [\"chipList\", \"\"], [3, \"removed\", 4, \"ngFor\", \"ngForOf\"], [3, \"formControl\", \"matAutocomplete\", \"matChipInputFor\", \"matChipInputTokenEnd\"], [\"fruitInput\", \"\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"removed\"], [\"matChipRemove\", \"\"], [3, \"value\"], [1, \"col-sm-6\", \"col-xl-9\"], [1, \"row\", \"align-items-center\", \"rowDatos\"], [1, \"col-sm-6\", \"col-xl-3\"], [\"matInput\", \"\", \"type\", \"number\", \"placeholder\", \"ingresar numero\", \"formControlName\", \"NU_RESPUESTAPREGUNTA\"], [\"matInput\", \"\", \"required\", \"\", \"readonly\", \"\", \"formControlName\", \"NU_RESPUESTAPREGUNTA\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"datePicker\", \"\"], [\"color\", \"primary\", \"formControlName\", \"NU_RESPUESTAPREGUNTA\", 1, \"w-100\"]],\n    template: function C6DeclaratoriaSaludQuemadoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵelementStart(1, \"mat-icon\", 1);\n        i0.ɵɵtext(2, \"close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"h1\");\n        i0.ɵɵtext(5, \"DECLARATORIA DE SALUD\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-dialog-content\");\n        i0.ɵɵelementStart(7, \"form\", 3);\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵtemplate(10, C6DeclaratoriaSaludQuemadoComponent_div_10_Template, 6, 6, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-dialog-actions\", 7);\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function C6DeclaratoriaSaludQuemadoComponent_Template_button_click_12_listener() {\n          return ctx.test2();\n        });\n        i0.ɵɵtext(13, \"Guardar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.formDeclaratoria);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getPreguntas.controls);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.getPreguntas.invalid);\n      }\n    },\n    directives: [i5.MatButton, i4.MatDialogClose, i6.MatIcon, i4.MatDialogTitle, i4.MatDialogContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormArrayName, i7.NgForOf, i4.MatDialogActions, i7.NgSwitch, i7.NgSwitchCase, i7.NgIf, i8.MatRadioGroup, i1.NgControlStatus, i1.FormControlName, i8.MatRadioButton, i9.MatFormField, i9.MatLabel, i10.MatChipList, i1.DefaultValueAccessor, i11.MatAutocompleteTrigger, i10.MatChipInput, i1.FormControlDirective, i11.MatAutocomplete, i10.MatChip, i10.MatChipRemove, i12.MatOption, i13.MatInput, i1.NumberValueAccessor, i14.MatDatepickerInput, i1.RequiredValidator, i14.MatDatepickerToggle, i9.MatSuffix, i14.MatDatepicker, i15.MatCheckbox],\n    pipes: [i7.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{overflow:hidden}.matTextInput[_ngcontent-%COMP%]{width:100px}.radioGroup[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;justify-content:space-around}.row[_ngcontent-%COMP%]{margin:0}.matField[_ngcontent-%COMP%], .medicamentos[_ngcontent-%COMP%]{width:100%;font-size:14px}#test[_ngcontent-%COMP%]{width:300px}.rowDatos[_ngcontent-%COMP%]{height:100%}[_nghost-%COMP%]  .mat-checkbox-layout{white-space:normal!important}[_nghost-%COMP%]  .mat-checkbox-inner-container{margin-top:4px}.close-button[_ngcontent-%COMP%]{float:right;top:-24px;right:-24px;background-color:#f4f4f4;box-shadow:none;border:2px solid #bbbbbb}.close-icon[_ngcontent-%COMP%]{transition:1s ease-in-out;color:gray}.close-icon[_ngcontent-%COMP%]:hover{transform:rotate(180deg);color:gray}mat-form-field[_ngcontent-%COMP%]{font-size:.875rem}  .icon-outside .close-button{float:right;top:-40px;right:-40px}  .icon-outside .mat-dialog-container{overflow:unset}.dialog-title[_ngcontent-%COMP%]{font-size:15px;border-bottom:1.5px solid #bebebe}.titulo-icono[_ngcontent-%COMP%]{font-size:50px;vertical-align:middle;color:#4c8fc5}h1[_ngcontent-%COMP%]{font-size:19px;padding-left:35px}.loading[_ngcontent-%COMP%]{margin-inline:auto}\"]\n  });\n  return C6DeclaratoriaSaludQuemadoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}